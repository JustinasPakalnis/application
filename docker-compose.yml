services:
  server:
    extends:
      file: docker-compose.common.yml
      service: server
    environment:
      NODE_ENV: development
    command: sh -c "npx prisma migrate dev --name init && npm run dev"
    volumes:
      - .:/app  
      - /app/node_modules
  database:
    extends:
      file: docker-compose.common.yml
      service: database
    ports:
      - "5432:5432"
  proxy:
    extends:
      file: docker-compose.common.yml
      service: proxy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
  cache:
    extends:
      file: docker-compose.common.yml
      service: cache
  prometheus:
    image: prom/prometheus:v2.52.0
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    restart: always
    privileged: true
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command:
      - --docker_only=true
  node-exporter:
    image: prom/node-exporter:v1.8.0
    restart: always
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    restart: always
    command:
      - --collector.postmaster
      - --collector.stat_statements
    environment:
      DATA_SOURCE_URI: ${MONITOR_DATABASE_URI:-database:5432/postgres?sslmode=disable}
      DATA_SOURCE_USER: postgres
      DATA_SOURCE_PASS: ${DATABASE_PASSWORD}
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9187:9187"
  grafana:
    image: grafana/grafana:10.4.3
    restart: always
    ports:
      - 3009:3000
    volumes:
      - grafana:/var/lib/grafana
      - ./monitoring/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/dashboards.yml:/etc/grafana/provisioning/dashboards/default.yaml
      - ./monitoring/datasources.yml:/etc/grafana/provisioning/datasources/default.yaml
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  database:
  caddy_data:
  caddy_config:
  cache:
  prometheus_data: {}
  grafana: {}
