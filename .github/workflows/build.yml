name: Build and deploy preview

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  pull-requests: write
  contents: read

jobs:
  set-vars:
    runs-on: ubuntu-latest
    steps:
      - id: set-vars
        run: echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    name: Build multiplatform image
    needs: set-vars
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/application
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=pr-${{ github.event.pull_request.number }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          sbom: true
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}

      - name: Setup cosign
        uses: sigstore/cosign-installer@v3

      - name: Write signing key to disk
        run: echo "${{ secrets.SIGNING_SECRET }}" > cosign.key

      - name: Sign container image
        run: |
          cosign sign --yes --key cosign.key \
          ${{ vars.DOCKERHUB_USERNAME }}/application@${{ steps.build.outputs.digest }}
        env:
          COSIGN_PASSWORD: ""
  deploy:
    runs-on: ubuntu-latest
    name: Deploy preview
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          export_environment_variables: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - name: Terraform Init & Apply
        id: terraform
        run: |
          cd infrastructure/workflow-deploy
          echo "ðŸ”§ Starting Terraform init"
          terraform init
          echo "ðŸ“¦ Running terraform plan"
          terraform plan -input=false \
            -var="docker_image_url=justinaspakalnis/application:pr-${{ github.event.pull_request.number }}" \
            -var="region=europe-west1" \
            -var="database_password=${{ secrets.DATABASE_PASSWORD }}" \
            -var="db_ip=${{ secrets.AUTHORIZED_IP }}" \
            -var="pr_number=${{ github.event.pull_request.number }}" \
            -backend-config="bucket=justinas-tf-state" \
            -backend-config="prefix=env/${{ github.event.pull_request.number }}"

          echo "ðŸš€ Applying Terraform"
          terraform apply -auto-approve -input=false \
            -var="docker_image_url=justinaspakalnis/application:pr-${{ github.event.pull_request.number }}" \
            -var="region=europe-west1" \
            -var="database_password=${{ secrets.DATABASE_PASSWORD }}" \
            -var="db_ip=${{ secrets.AUTHORIZED_IP }}" \
            -var="pr_number=${{ github.event.pull_request.number }}" \
            -backend-config="prefix=env/${{ github.event.pull_request.number }}"
          echo "preview_url=$(terraform output -raw cloud_run_url)" >> $GITHUB_OUTPUT

      - name: Comment with Preview Link
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            âœ… Preview deployed: [Click to view](${{ steps.terraform.outputs.preview_url }})
