services:
  server:
    restart: unless-stopped  
    build: .
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_started
    environment:
      DATABASE_URL: "postgresql://postgres:${DATABASE_PASSWORD}@database:5432/postgres"
      CACHE_HOST: ${CACHE_HOST}
      CACHE_PORT: ${CACHE_PORT}
      CACHE_PASSWORD: ${CACHE_PASSWORD}
    volumes:
      - .:/app  
      - /app/node_modules
  database:
    image: postgres:15
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - database:/var/lib/postgresql/data
  proxy:
    image: caddy:2.7.4
    restart: unless-stopped
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - server
  cache:
      image: redis:7.2.4
      restart: unless-stopped
      command: redis-server --requirepass ${CACHE_PASSWORD}
      volumes:
        - cache:/data

volumes:
  database:
  caddy_data:
  caddy_config:
  cache: